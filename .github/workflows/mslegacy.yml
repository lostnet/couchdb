name: MSLegacy

on: [workflow_dispatch,push]

env:
  ADD_PATH: "C:\\mozilla-build\\bin;C:\\mozilla-build\\msys\\bin;C:\\mozilla-build\\msys\\local\\bin;C:\\vcpkg\\installed\\x64-windows\\bin;"
  AUTOCONF: "C:\\mozilla-build\\msys\\local\\bin\\autoconf-2.13"
  NATIVE_WIN32_PYTHON: "C:\\mozilla-build\\python\\python2.7.exe"
  LIB: "C:\\vcpkg\\installed\\x64-windows\\lib;C:\\vcpkg\\installed\\x64-windows\\bin"
  INCLUDE: "C:\\vcpkg\\installed\\x64-windows\\include"
  LIBPATH: "C:\\vcpkg\\installed\\x64-windows\\lib"
  PKG_CONFIG_PATH: "C:\\vcpkg\\installed\\x64-windows\\lib\\pkgconfig"  
  M4: m4
  AWK: awk
  
jobs:
  msys:
    runs-on: windows-2016
    steps:
      - name: find things
        shell: bash
        continue-on-error: true
        run: |
          find /c/msys64 -name pacman\* -print
          find /c/msys64 -name bash\* -print

      - name: update
        shell: cmd
        run: |
          C:\msys64\bin\bask -c pacman -Syu
          C:\msys64\bin\bash -c pacman -Su
      - name: install icu
        shell: powershell
        run: C:\msys64\bin\bash -c pacman -S --needed base-devel mingw-w64-x86_64-toolchain icu-devel
      - name: find things
        shell: bash
        continue-on-error: true
        run: |
          find /c/msys64 -name icu\*.pc -exec cat {} \; -print
        
  
  build:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2

    - name: dump env
      shell: python
      continue-on-error: true
      run: |
        import os
        env = os.environ.copy()
        env['PATH'] = 'C:\\mozilla-build\\msys\\bin;C:\\mozilla-build\\msys\\local\\bin;'+env['PATH']
        print(env)        

    - name: Install deps on windows
      shell: powershell
      run: |
        Start-BitsTransfer -Source https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe -Destination ./MozillaBuildSetup.exe
        .\MozillaBuildSetup.exe /S | Out-Null

    - name: moz checkout
      uses: actions/checkout@v2
      with:
        repository: mozilla/gecko-dev
        ref: esr78
        path: gecko-dev

    - name: choco install
      run: choco install pkgconfiglite
      
    - name: Install vcpkg dependencies
      shell: pwsh
      run: |
        Install-Module VSSetup -Scope CurrentUser -Force
        vcpkg.exe install icu
        vcpkg.exe integrate install
        
    - name: find things
      shell: bash
      continue-on-error: true
      run: |
        find /c/vcpkg -name icu\*.dll -print
        find /c/vcpkg -name \*.pc -exec cat {} \; -print
        find /c/mozilla-build -type f -name \*make\* -print
        ls -l /c/mozilla-build/msys/local/bin/autoconf-2.13
        echo lld
        find /c/PROGRA~1/LLVM/bin/ -name \*lld\* -print
      
    - name: autoconf mozjs
      shell: python
      working-directory: gecko-dev\js\src
      continue-on-error: true
      run: |
        import subprocess
        import os
        env = os.environ.copy()
        env['PATH'] = 'C:\\mozilla-build\\msys\\bin;C:\\mozilla-build\\msys\\local\\bin;'+env['PATH']
        print(env['PATH'])        
        subprocess.run(["autoconf-2.13"], env=env)
        
    - name: builddir for mozjs
      working-directory: gecko-dev\js\src
      run: mkdir build_OPT.OBJ

    - name: conf mozjs
      working-directory: gecko-dev\js\src\build_OPT.OBJ
      shell: python
      env:
        SRCDIR: ${{ github.workspace}}\gecko-dev\js\src
        OLD_CONFIGURE: ${{ github.workspace }}\gecko-dev\js\src\old-configure
        TOPSRCDIR: ${{ github.workspace }}\gecko-dev
      run: |
        import subprocess
        import os
        env = os.environ.copy()
        env['PATH'] = env['ADD_PATH']+env['PATH']
        subprocess.run(["python.EXE", "../../../configure.py", "--enable-project=js", "--disable-ctypes", "--disable-jit", "--disable-jemalloc", "--enable-optimize", "--enable-hardening", "--with-intl-api", "--build-backends=RecursiveMake", "--with-visual-studio-version=2017", "--with-system-icu", "--disable-debug", "--enable-gczeal", "--target=x86_64-pc-mingw32", "--host=x86_64-pc-mingw32", "--prefix=/c/vcpkg/installed/x64-windows"], env=env)

    - name: make
      working-directory: gecko-dev\js\src\build_OPT.OBJ
      shell: powershell
      run: |
        $env:Path = $env:ADD_PATH + $env:Path
        C:\mozilla-build\bin\mozmake.exe
